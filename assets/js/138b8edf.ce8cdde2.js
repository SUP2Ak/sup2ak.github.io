"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[953],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>y});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},p=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,y=u["".concat(c,".").concat(f)]||u[f]||d[f]||a;return n?t.createElement(y,l(l({ref:r},p),{},{components:n})):t.createElement(y,l({ref:r},p))}));function y(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8850:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var t=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},l="server/framework/es_extended.lua",i={unversionedId:"esx_legacy/doublejob/ox_doorlock/server",id:"esx_legacy/doublejob/ox_doorlock/server",title:"server/framework/es_extended.lua",description:"Add/Refresh les factions au groups",source:"@site/docs/esx_legacy/doublejob/ox_doorlock/server.md",sourceDirName:"esx_legacy/doublejob/ox_doorlock",slug:"/esx_legacy/doublejob/ox_doorlock/server",permalink:"/docs/esx_legacy/doublejob/ox_doorlock/server",draft:!1,editUrl:"https://github.com/SUP2Ak/sup2ak.github.io/tree/main/docs/esx_legacy/doublejob/ox_doorlock/server.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"esx_legacy",previous:{title:"server/main.lua",permalink:"/docs/esx_legacy/doublejob/esx_society/server"},next:{title:"modules/bridge/esx/client.lua",permalink:"/docs/esx_legacy/doublejob/ox_inventory/bclient"}},c={},s=[],p={toc:s},u="wrapper";function d(e){let{components:r,...n}=e;return(0,o.kt)(u,(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"serverframeworkes_extendedlua"},"server/framework/es_extended.lua"),(0,o.kt)("p",null,"Add/Refresh les ",(0,o.kt)("inlineCode",{parentName:"p"},"factions")," au ",(0,o.kt)("inlineCode",{parentName:"p"},"groups")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",null,(0,o.kt)("u",null,"Trouvez la fonction ",(0,o.kt)("code",null,"function IsPlayerInGroup(player, filter)"),", et remplacez le enti\xe8rement par celui-ci :")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"function IsPlayerInGroup(player, filter)\n    local type = type(filter)\n\n    if type == 'string' then\n        if player.job.name == filter then\n            return player.job.name, player.job.grade\n        elseif player.faction.name == filter then\n            return player.faction.name, player.faction.grade\n        end\n    else\n        local tabletype = table.type(filter)\n\n        if tabletype == 'hash' then\n            local grade, gradef = filter[player.job.name], filter[player.faction.name]\n\n            if grade and grade <= player.job.grade then\n                return player.job.name, player.job.grade\n            elseif gradef and gradef <= player.faction.grade then\n                return player.faction.name, player.faction.grade\n            end\n        elseif tabletype == 'array' then\n            for i = 1, #filter do\n                if player.job.name == filter[i] then\n                    return player.job.name, player.job.grade\n                elseif player.faction.name == filter[i] then\n                    return player.faction.name, player.faction.grade\n                end\n            end\n        end\n    end\nend\n")))}d.isMDXComponent=!0}}]);